// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int              @id @default(autoincrement())
  name      String
  email     String           @unique
  password  String
  role      String           @default("employer")
  createdAt DateTime         @default(now())
  jobs      Job[]
  saved     SavedCandidate[]
}

model Job {
  id          Int         @id @default(autoincrement())
  title       String
  description String
  location    String?
  company     String
  createdAt   DateTime    @default(now())
  user        User        @relation(fields: [userId], references: [id])
  userId      Int
  candidates  Candidate[]
}

model Candidate {
  id         Int              @id @default(autoincrement())
  name       String
  location   String?
  profileUrl String?
  matchScore Float?
  createdAt  DateTime         @default(now())
  job        Job              @relation(fields: [jobId], references: [id])
  jobId      Int
  savedBy    SavedCandidate[]
}

model SavedCandidate {
  id          Int       @id @default(autoincrement())
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
  candidate   Candidate @relation(fields: [candidateId], references: [id])
  candidateId Int
  savedAt     DateTime  @default(now())
}
